/*
 * This file is generated by jOOQ.
*/
package moccasin.moccasin.model.jooq.atc.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import moccasin.moccasin.model.jooq.atc.Atc;
import moccasin.moccasin.model.jooq.atc.Keys;
import moccasin.moccasin.model.jooq.atc.tables.records.AtcCodesRecord;

import org.jooq.Field;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class AtcCodes extends TableImpl<AtcCodesRecord> {

    private static final long serialVersionUID = 883801937;

    /**
     * The reference instance of <code>atc.atc_codes</code>
     */
    public static final AtcCodes ATC_CODES = new AtcCodes();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<AtcCodesRecord> getRecordType() {
        return AtcCodesRecord.class;
    }

    /**
     * The column <code>atc.atc_codes.ATC-Code</code>.
     */
    public final TableField<AtcCodesRecord, String> ATC_CODE = createField("ATC-Code", org.jooq.impl.SQLDataType.CLOB.nullable(false), this, "");

    /**
     * The column <code>atc.atc_codes.bedeutung</code>.
     */
    public final TableField<AtcCodesRecord, String> BEDEUTUNG = createField("bedeutung", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * The column <code>atc.atc_codes.DDD-Info</code>.
     */
    public final TableField<AtcCodesRecord, String> DDD_INFO = createField("DDD-Info", org.jooq.impl.SQLDataType.CLOB, this, "");

    /**
     * Create a <code>atc.atc_codes</code> table reference
     */
    public AtcCodes() {
        this(DSL.name("atc_codes"), null);
    }

    /**
     * Create an aliased <code>atc.atc_codes</code> table reference
     */
    public AtcCodes(String alias) {
        this(DSL.name(alias), ATC_CODES);
    }

    /**
     * Create an aliased <code>atc.atc_codes</code> table reference
     */
    public AtcCodes(Name alias) {
        this(alias, ATC_CODES);
    }

    private AtcCodes(Name alias, Table<AtcCodesRecord> aliased) {
        this(alias, aliased, null);
    }

    private AtcCodes(Name alias, Table<AtcCodesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Atc.ATC;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<AtcCodesRecord> getPrimaryKey() {
        return Keys.ATC_CODES_ATC_CODE_PK;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<AtcCodesRecord>> getKeys() {
        return Arrays.<UniqueKey<AtcCodesRecord>>asList(Keys.ATC_CODES_ATC_CODE_PK);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AtcCodes as(String alias) {
        return new AtcCodes(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public AtcCodes as(Name alias) {
        return new AtcCodes(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public AtcCodes rename(String name) {
        return new AtcCodes(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public AtcCodes rename(Name name) {
        return new AtcCodes(name, null);
    }
}
