/*
 * This file is generated by jOOQ.
*/
package moccasin.moccasin.model.jooq.icd.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import moccasin.moccasin.model.jooq.icd.Icd;
import moccasin.moccasin.model.jooq.icd.Indexes;
import moccasin.moccasin.model.jooq.icd.Keys;
import moccasin.moccasin.model.jooq.icd.tables.records.GroupsRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Groups extends TableImpl<GroupsRecord> {

    private static final long serialVersionUID = 387360660;

    /**
     * The reference instance of <code>icd.groups</code>
     */
    public static final Groups GROUPS = new Groups();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<GroupsRecord> getRecordType() {
        return GroupsRecord.class;
    }

    /**
     * The column <code>icd.groups.grvon</code>.
     */
    public final TableField<GroupsRecord, String> GRVON = createField("grvon", org.jooq.impl.SQLDataType.VARCHAR(3).nullable(false), this, "");

    /**
     * The column <code>icd.groups.grbis</code>.
     */
    public final TableField<GroupsRecord, String> GRBIS = createField("grbis", org.jooq.impl.SQLDataType.VARCHAR(3), this, "");

    /**
     * The column <code>icd.groups.kapnr</code>.
     */
    public final TableField<GroupsRecord, String> KAPNR = createField("kapnr", org.jooq.impl.SQLDataType.VARCHAR(2), this, "");

    /**
     * The column <code>icd.groups.grti</code>.
     */
    public final TableField<GroupsRecord, String> GRTI = createField("grti", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * Create a <code>icd.groups</code> table reference
     */
    public Groups() {
        this(DSL.name("groups"), null);
    }

    /**
     * Create an aliased <code>icd.groups</code> table reference
     */
    public Groups(String alias) {
        this(DSL.name(alias), GROUPS);
    }

    /**
     * Create an aliased <code>icd.groups</code> table reference
     */
    public Groups(Name alias) {
        this(alias, GROUPS);
    }

    private Groups(Name alias, Table<GroupsRecord> aliased) {
        this(alias, aliased, null);
    }

    private Groups(Name alias, Table<GroupsRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Icd.ICD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.GRX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<GroupsRecord> getPrimaryKey() {
        return Keys.GRX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<GroupsRecord>> getKeys() {
        return Arrays.<UniqueKey<GroupsRecord>>asList(Keys.GRX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<GroupsRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<GroupsRecord, ?>>asList(Keys.GROUPS__KGRX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Groups as(String alias) {
        return new Groups(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Groups as(Name alias) {
        return new Groups(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Groups rename(String name) {
        return new Groups(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Groups rename(Name name) {
        return new Groups(name, null);
    }
}
