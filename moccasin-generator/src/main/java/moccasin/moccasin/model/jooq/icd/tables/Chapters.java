/*
 * This file is generated by jOOQ.
*/
package moccasin.moccasin.model.jooq.icd.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import moccasin.moccasin.model.jooq.icd.Icd;
import moccasin.moccasin.model.jooq.icd.Indexes;
import moccasin.moccasin.model.jooq.icd.Keys;
import moccasin.moccasin.model.jooq.icd.tables.records.ChaptersRecord;

import org.jooq.Field;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class Chapters extends TableImpl<ChaptersRecord> {

    private static final long serialVersionUID = -859815802;

    /**
     * The reference instance of <code>icd.chapters</code>
     */
    public static final Chapters CHAPTERS = new Chapters();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<ChaptersRecord> getRecordType() {
        return ChaptersRecord.class;
    }

    /**
     * The column <code>icd.chapters.kapnr</code>.
     */
    public final TableField<ChaptersRecord, String> KAPNR = createField("kapnr", org.jooq.impl.SQLDataType.VARCHAR(2).nullable(false), this, "");

    /**
     * The column <code>icd.chapters.kapti</code>.
     */
    public final TableField<ChaptersRecord, String> KAPTI = createField("kapti", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * Create a <code>icd.chapters</code> table reference
     */
    public Chapters() {
        this(DSL.name("chapters"), null);
    }

    /**
     * Create an aliased <code>icd.chapters</code> table reference
     */
    public Chapters(String alias) {
        this(DSL.name(alias), CHAPTERS);
    }

    /**
     * Create an aliased <code>icd.chapters</code> table reference
     */
    public Chapters(Name alias) {
        this(alias, CHAPTERS);
    }

    private Chapters(Name alias, Table<ChaptersRecord> aliased) {
        this(alias, aliased, null);
    }

    private Chapters(Name alias, Table<ChaptersRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Icd.ICD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.KAPX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<ChaptersRecord> getPrimaryKey() {
        return Keys.KAPX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<ChaptersRecord>> getKeys() {
        return Arrays.<UniqueKey<ChaptersRecord>>asList(Keys.KAPX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Chapters as(String alias) {
        return new Chapters(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Chapters as(Name alias) {
        return new Chapters(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public Chapters rename(String name) {
        return new Chapters(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public Chapters rename(Name name) {
        return new Chapters(name, null);
    }
}
