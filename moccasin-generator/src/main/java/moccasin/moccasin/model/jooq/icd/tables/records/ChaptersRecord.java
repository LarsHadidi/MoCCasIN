/*
 * This file is generated by jOOQ.
*/
package moccasin.moccasin.model.jooq.icd.tables.records;


import javax.annotation.Generated;

import moccasin.moccasin.model.jooq.icd.tables.Chapters;

import org.jooq.Field;
import org.jooq.Record1;
import org.jooq.Record2;
import org.jooq.Row2;
import org.jooq.impl.UpdatableRecordImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class ChaptersRecord extends UpdatableRecordImpl<ChaptersRecord> implements Record2<String, String> {

    private static final long serialVersionUID = -772106622;

    /**
     * Setter for <code>icd.chapters.kapnr</code>.
     */
    public void setKapnr(String value) {
        set(0, value);
    }

    /**
     * Getter for <code>icd.chapters.kapnr</code>.
     */
    public String getKapnr() {
        return (String) get(0);
    }

    /**
     * Setter for <code>icd.chapters.kapti</code>.
     */
    public void setKapti(String value) {
        set(1, value);
    }

    /**
     * Getter for <code>icd.chapters.kapti</code>.
     */
    public String getKapti() {
        return (String) get(1);
    }

    // -------------------------------------------------------------------------
    // Primary key information
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Record1<String> key() {
        return (Record1) super.key();
    }

    // -------------------------------------------------------------------------
    // Record2 type implementation
    // -------------------------------------------------------------------------

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<String, String> fieldsRow() {
        return (Row2) super.fieldsRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Row2<String, String> valuesRow() {
        return (Row2) super.valuesRow();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field1() {
        return Chapters.CHAPTERS.KAPNR;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Field<String> field2() {
        return Chapters.CHAPTERS.KAPTI;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component1() {
        return getKapnr();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String component2() {
        return getKapti();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value1() {
        return getKapnr();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public String value2() {
        return getKapti();
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChaptersRecord value1(String value) {
        setKapnr(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChaptersRecord value2(String value) {
        setKapti(value);
        return this;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public ChaptersRecord values(String value1, String value2) {
        value1(value1);
        value2(value2);
        return this;
    }

    // -------------------------------------------------------------------------
    // Constructors
    // -------------------------------------------------------------------------

    /**
     * Create a detached ChaptersRecord
     */
    public ChaptersRecord() {
        super(Chapters.CHAPTERS);
    }

    /**
     * Create a detached, initialised ChaptersRecord
     */
    public ChaptersRecord(String kapnr, String kapti) {
        super(Chapters.CHAPTERS);

        set(0, kapnr);
        set(1, kapti);
    }
}
