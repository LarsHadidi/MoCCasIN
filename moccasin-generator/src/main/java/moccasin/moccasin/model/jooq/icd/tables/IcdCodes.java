/*
 * This file is generated by jOOQ.
*/
package moccasin.moccasin.model.jooq.icd.tables;


import java.util.Arrays;
import java.util.List;

import javax.annotation.Generated;

import moccasin.moccasin.model.jooq.icd.Icd;
import moccasin.moccasin.model.jooq.icd.Indexes;
import moccasin.moccasin.model.jooq.icd.Keys;
import moccasin.moccasin.model.jooq.icd.tables.records.IcdCodesRecord;

import org.jooq.Field;
import org.jooq.ForeignKey;
import org.jooq.Index;
import org.jooq.Name;
import org.jooq.Schema;
import org.jooq.Table;
import org.jooq.TableField;
import org.jooq.UniqueKey;
import org.jooq.impl.DSL;
import org.jooq.impl.TableImpl;


/**
 * This class is generated by jOOQ.
 */
@Generated(
    value = {
        "http://www.jooq.org",
        "jOOQ version:3.10.2"
    },
    comments = "This class is generated by jOOQ"
)
@SuppressWarnings({ "all", "unchecked", "rawtypes" })
public class IcdCodes extends TableImpl<IcdCodesRecord> {

    private static final long serialVersionUID = 1248995510;

    /**
     * The reference instance of <code>icd.icd_codes</code>
     */
    public static final IcdCodes ICD_CODES = new IcdCodes();

    /**
     * The class holding records for this type
     */
    @Override
    public Class<IcdCodesRecord> getRecordType() {
        return IcdCodesRecord.class;
    }

    /**
     * The column <code>icd.icd_codes.ebene</code>.
     */
    public final TableField<IcdCodesRecord, String> EBENE = createField("ebene", org.jooq.impl.SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>icd.icd_codes.ort</code>.
     */
    public final TableField<IcdCodesRecord, String> ORT = createField("ort", org.jooq.impl.SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>icd.icd_codes.art</code>.
     */
    public final TableField<IcdCodesRecord, String> ART = createField("art", org.jooq.impl.SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>icd.icd_codes.kapnr</code>.
     */
    public final TableField<IcdCodesRecord, String> KAPNR = createField("kapnr", org.jooq.impl.SQLDataType.VARCHAR(2), this, "");

    /**
     * The column <code>icd.icd_codes.grvon</code>.
     */
    public final TableField<IcdCodesRecord, String> GRVON = createField("grvon", org.jooq.impl.SQLDataType.VARCHAR(3), this, "");

    /**
     * The column <code>icd.icd_codes.code</code>.
     */
    public final TableField<IcdCodesRecord, String> CODE = createField("code", org.jooq.impl.SQLDataType.VARCHAR(7).nullable(false), this, "");

    /**
     * The column <code>icd.icd_codes.normcode</code>.
     */
    public final TableField<IcdCodesRecord, String> NORMCODE = createField("normcode", org.jooq.impl.SQLDataType.VARCHAR(6), this, "");

    /**
     * The column <code>icd.icd_codes.codeohnepunkt</code>.
     */
    public final TableField<IcdCodesRecord, String> CODEOHNEPUNKT = createField("codeohnepunkt", org.jooq.impl.SQLDataType.VARCHAR(5), this, "");

    /**
     * The column <code>icd.icd_codes.titel</code>.
     */
    public final TableField<IcdCodesRecord, String> TITEL = createField("titel", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>icd.icd_codes.dreisteller</code>.
     */
    public final TableField<IcdCodesRecord, String> DREISTELLER = createField("dreisteller", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>icd.icd_codes.viersteller</code>.
     */
    public final TableField<IcdCodesRecord, String> VIERSTELLER = createField("viersteller", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>icd.icd_codes.fünfsteller</code>.
     */
    public final TableField<IcdCodesRecord, String> FÜNFSTELLER = createField("fünfsteller", org.jooq.impl.SQLDataType.VARCHAR(255), this, "");

    /**
     * The column <code>icd.icd_codes.p295</code>.
     */
    public final TableField<IcdCodesRecord, String> P295 = createField("p295", org.jooq.impl.SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>icd.icd_codes.p301</code>.
     */
    public final TableField<IcdCodesRecord, String> P301 = createField("p301", org.jooq.impl.SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>icd.icd_codes.mortl1code</code>.
     */
    public final TableField<IcdCodesRecord, String> MORTL1CODE = createField("mortl1code", org.jooq.impl.SQLDataType.VARCHAR(5), this, "");

    /**
     * The column <code>icd.icd_codes.mortl2code</code>.
     */
    public final TableField<IcdCodesRecord, String> MORTL2CODE = createField("mortl2code", org.jooq.impl.SQLDataType.VARCHAR(5), this, "");

    /**
     * The column <code>icd.icd_codes.mortl3code</code>.
     */
    public final TableField<IcdCodesRecord, String> MORTL3CODE = createField("mortl3code", org.jooq.impl.SQLDataType.VARCHAR(5), this, "");

    /**
     * The column <code>icd.icd_codes.mortl4code</code>.
     */
    public final TableField<IcdCodesRecord, String> MORTL4CODE = createField("mortl4code", org.jooq.impl.SQLDataType.VARCHAR(5), this, "");

    /**
     * The column <code>icd.icd_codes.morblcode</code>.
     */
    public final TableField<IcdCodesRecord, String> MORBLCODE = createField("morblcode", org.jooq.impl.SQLDataType.VARCHAR(5), this, "");

    /**
     * The column <code>icd.icd_codes.sexcode</code>.
     */
    public final TableField<IcdCodesRecord, String> SEXCODE = createField("sexcode", org.jooq.impl.SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>icd.icd_codes.sexfehlertyp</code>.
     */
    public final TableField<IcdCodesRecord, String> SEXFEHLERTYP = createField("sexfehlertyp", org.jooq.impl.SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>icd.icd_codes.altuntneu</code>.
     */
    public final TableField<IcdCodesRecord, String> ALTUNTNEU = createField("altuntneu", org.jooq.impl.SQLDataType.VARCHAR(4), this, "");

    /**
     * The column <code>icd.icd_codes.altobneu</code>.
     */
    public final TableField<IcdCodesRecord, String> ALTOBNEU = createField("altobneu", org.jooq.impl.SQLDataType.VARCHAR(4), this, "");

    /**
     * The column <code>icd.icd_codes.altfehlertyp</code>.
     */
    public final TableField<IcdCodesRecord, String> ALTFEHLERTYP = createField("altfehlertyp", org.jooq.impl.SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>icd.icd_codes.exot</code>.
     */
    public final TableField<IcdCodesRecord, String> EXOT = createField("exot", org.jooq.impl.SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>icd.icd_codes.belegt</code>.
     */
    public final TableField<IcdCodesRecord, String> BELEGT = createField("belegt", org.jooq.impl.SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>icd.icd_codes.ifsgmeldung</code>.
     */
    public final TableField<IcdCodesRecord, String> IFSGMELDUNG = createField("ifsgmeldung", org.jooq.impl.SQLDataType.VARCHAR(1), this, "");

    /**
     * The column <code>icd.icd_codes.ifsglabor</code>.
     */
    public final TableField<IcdCodesRecord, String> IFSGLABOR = createField("ifsglabor", org.jooq.impl.SQLDataType.VARCHAR(1), this, "");

    /**
     * Create a <code>icd.icd_codes</code> table reference
     */
    public IcdCodes() {
        this(DSL.name("icd_codes"), null);
    }

    /**
     * Create an aliased <code>icd.icd_codes</code> table reference
     */
    public IcdCodes(String alias) {
        this(DSL.name(alias), ICD_CODES);
    }

    /**
     * Create an aliased <code>icd.icd_codes</code> table reference
     */
    public IcdCodes(Name alias) {
        this(alias, ICD_CODES);
    }

    private IcdCodes(Name alias, Table<IcdCodesRecord> aliased) {
        this(alias, aliased, null);
    }

    private IcdCodes(Name alias, Table<IcdCodesRecord> aliased, Field<?>[] parameters) {
        super(alias, null, aliased, parameters, "");
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public Schema getSchema() {
        return Icd.ICD;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<Index> getIndexes() {
        return Arrays.<Index>asList(Indexes.CODEOHNEPUNKTX, Indexes.CODEX, Indexes.EBENEX, Indexes.NORMCODEX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public UniqueKey<IcdCodesRecord> getPrimaryKey() {
        return Keys.CODEX;
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<UniqueKey<IcdCodesRecord>> getKeys() {
        return Arrays.<UniqueKey<IcdCodesRecord>>asList(Keys.CODEX, Keys.NORMCODEX, Keys.CODEOHNEPUNKTX);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public List<ForeignKey<IcdCodesRecord, ?>> getReferences() {
        return Arrays.<ForeignKey<IcdCodesRecord, ?>>asList(Keys.ICD_CODES__CODESKAPITEL, Keys.ICD_CODES__CODESGRUPPEN);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IcdCodes as(String alias) {
        return new IcdCodes(DSL.name(alias), this);
    }

    /**
     * {@inheritDoc}
     */
    @Override
    public IcdCodes as(Name alias) {
        return new IcdCodes(alias, this);
    }

    /**
     * Rename this table
     */
    @Override
    public IcdCodes rename(String name) {
        return new IcdCodes(DSL.name(name), null);
    }

    /**
     * Rename this table
     */
    @Override
    public IcdCodes rename(Name name) {
        return new IcdCodes(name, null);
    }
}
